{"version":3,"file":"js/SamplePage.833d412df6c823e05013.js","mappings":"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","sources":["webpack:///./src/Routes/SamplePage/SamplePage.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport { Button, GridItem, Grid, Title, FormGroup, TextInput, Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport axios from 'axios';\n\nimport './sample-page.scss';\nimport ProvisioningWizard from '../../Components/ProvisioningWizard';\nimport { AWS_PROVIDER, AZURE_PROVIDER } from '../../constants';\n\n/**\nThis page demonstrates the provisioning UI wizard\n */\n\n// This default AMI value is taken when no image builder api found\nconst IMAGE_BUILDER_URL = '/api/image-builder/v1/composes';\n\nexport const SamplePage = () => {\n  const [isWizardOpen, setWizardModal] = React.useState(false);\n  const [images, setImages] = React.useState([]);\n  const [chosenImage, setChosenImage] = React.useState({\n    isTesting: true,\n    id: undefined,\n    name: undefined,\n    provider: AWS_PROVIDER,\n    architecture: undefined,\n  });\n  const [isImageSelectOpen, setImageSelect] = React.useState(false);\n  const [isProviderSelectOpen, setProviderSelectOpen] = React.useState(false);\n\n  useEffect(() => {\n    const fetchImagesFromIB = async () => {\n      try {\n        const { data } = await axios.get(IMAGE_BUILDER_URL);\n        setImages(data?.data);\n      } catch (e) {\n        console.debug('No image builder api has been found');\n        setImages(false);\n      }\n    };\n\n    fetchImagesFromIB();\n  }, []);\n\n  const onImageSelectionToggle = (isOpen) => {\n    setImageSelect(isOpen);\n  };\n\n  const onImageSelect = (event, selection, isPlaceholder) => {\n    if (isPlaceholder) return;\n    const { id, request } = images.find((image) => image.image_name === selection);\n    const { architecture, image_type } = request.image_requests[0];\n    setChosenImage({ isTesting: true, id: id, name: selection, architecture: architecture, provider: image_type });\n    setImageSelect(false);\n  };\n\n  const onInputChange = (value) => {\n    setChosenImage({ ...chosenImage, id: value, name: 'manualy entered AMI', architecture: 'x86_64' });\n  };\n  const onProviderSelect = (evt, value) => {\n    setChosenImage({ ...chosenImage, provider: value });\n    setProviderSelectOpen(false);\n  };\n\n  const renderSelect = (images) => (\n    <Select\n      width=\"50%\"\n      variant={SelectVariant.single}\n      placeholderText=\"Select an image\"\n      aria-label=\"Select Image\"\n      onToggle={onImageSelectionToggle}\n      onSelect={onImageSelect}\n      selections={chosenImage.name}\n      isOpen={isImageSelectOpen}\n    >\n      {images?.map((option) => (\n        <SelectOption key={option.id} value={option.image_name} description={`ID: ${option.id}`} />\n      ))}\n    </Select>\n  );\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title=\"Sample Provisioning App\" />\n        <p> Provisioning Demo </p>\n      </PageHeader>\n      <Grid hasGutter>\n        {images && <GridItem>{renderSelect(images)}</GridItem>}\n        <GridItem span={3}>\n          <FormGroup label=\"Provider\">\n            <Select\n              variant={SelectVariant.single}\n              aria-label=\"Select Provider\"\n              ouiaId=\"select_provider\"\n              onToggle={(isOpen) => setProviderSelectOpen(isOpen)}\n              onSelect={onProviderSelect}\n              selections={chosenImage.provider}\n              isOpen={isProviderSelectOpen}\n            >\n              <SelectOption key={AWS_PROVIDER} value={AWS_PROVIDER} />\n              <SelectOption key={AZURE_PROVIDER} value={AZURE_PROVIDER} />\n            </Select>\n          </FormGroup>\n        </GridItem>\n        <GridItem span={6}>\n          <FormGroup label=\"Image\">\n            <TextInput aria-label=\"manual ami\" id=\"ami\" ouiaId=\"image_id\" value={chosenImage.id || ''} onChange={onInputChange} />\n          </FormGroup>\n        </GridItem>\n        <GridItem>\n          <Title headingLevel=\"h2\" size=\"3xl\"></Title>\n          <Button variant=\"primary\" onClick={() => setWizardModal(true)}>\n            Open Wizard\n          </Button>\n          {isWizardOpen && <ProvisioningWizard isOpen={true} onClose={() => setWizardModal(false)} image={chosenImage} />}\n        </GridItem>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withRouter(SamplePage);\n"],"names":["SamplePage","_React$useState","React","_React$useState2","_slicedToArray","isWizardOpen","setWizardModal","_React$useState3","_React$useState4","images","setImages","_React$useState5","isTesting","id","undefined","name","provider","AWS_PROVIDER","architecture","_React$useState6","chosenImage","setChosenImage","_React$useState7","_React$useState8","isImageSelectOpen","setImageSelect","_React$useState9","_React$useState10","isProviderSelectOpen","setProviderSelectOpen","useEffect","fetchImagesFromIB","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","axios","sent","t0","console","debug","stop","apply","arguments","onImageSelectionToggle","isOpen","onImageSelect","event","selection","isPlaceholder","_images$find","find","image","image_name","_request$image_reques","request","image_requests","image_type","PageHeader","PageHeaderTitle","title","Grid","hasGutter","GridItem","Select","width","variant","SelectVariant","placeholderText","onToggle","onSelect","selections","map","option","SelectOption","key","value","description","concat","renderSelect","span","FormGroup","label","ouiaId","evt","_objectSpread","AZURE_PROVIDER","TextInput","onChange","Title","headingLevel","size","Button","onClick","ProvisioningWizard","onClose","withRouter"],"sourceRoot":""}