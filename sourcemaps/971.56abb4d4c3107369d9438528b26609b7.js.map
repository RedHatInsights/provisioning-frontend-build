{"version":3,"file":"js/971.62764bc1a9437d15c7f9.js","mappings":"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","sources":["webpack:///./src/Components/ProvisioningWizard/steps/ReservationProgress/constants.js","webpack:///./src/Components/ProvisioningWizard/steps/ReservationProgress/helpers.js","webpack:///./src/Components/Common/Hooks/useInterval.js","webpack:///./src/Components/Common/instanceHelpers.js","webpack:///./src/Components/InstancesTable/index.js","webpack:///./src/Components/InstancesTable/helpers.js","webpack:///./src/Components/ProvisioningWizard/steps/ReservationProgress/index.js"],"sourcesContent":["import { AWS_PROVIDER, AZURE_PROVIDER, GCP_PROVIDER } from '../../../../constants';\n\nexport const PF_SUCCESS_100 = '#3E8635';\nexport const PF_DANGER_100 = '#C9190B';\n\nexport const POLLING_BACKOFF_INTERVAL = [\n  500, 600, 700, 800, 900, 1000, 1200, 1400, 1600, 1800, 2000, 3000, 4000, 5000, 10000, 15000, 20000, 25000, 30000, 60000, 60000,\n];\n\nexport const AWS_STEPS = [\n  { name: 'Create reservation', description: `Submit requested data` },\n  {\n    name: 'Transfer keys',\n    description: 'Uploading public key to AWS',\n  },\n  { name: 'Launch instance(s)', description: 'Call AWS API for launching instance(s)' },\n  { name: 'Instance description', description: 'Fetch instance(s) descriptions' },\n];\n\nexport const AZURE_STEPS = [\n  { name: 'Create reservation', description: `Submit data of requested instances` },\n  { name: 'Ensure resource group', description: 'Ensure resource group is present on Azure account' },\n  { name: 'Launch instance(s)', description: 'Launch defined instance(s) on Azure' },\n];\n\nexport const GCP_STEPS = [\n  { name: 'Create reservation', description: `Submit requested data` },\n  { name: 'Launch instance(s)', description: 'Call Google API' },\n  { name: 'Fetch instance(s) description', description: 'Fetch instance(s) descriptions' },\n];\n\nexport const SSH_STEP = [{ name: 'New SSH key', description: 'Creating new SSH public key resource' }];\n\nexport const PROVIDERS_INSTANCES_SUPPORT = [AWS_PROVIDER, AZURE_PROVIDER, GCP_PROVIDER];\n","import { AWS_PROVIDER, AZURE_PROVIDER, GCP_PROVIDER } from '../../../Common/constants';\nimport { AWS_STEPS, AZURE_STEPS, GCP_STEPS } from './constants';\n\nexport const mapCurrentVariant = (step, currentStep, currentError, currentWarning) => {\n  if (step < currentStep) return 'success';\n  if (step === currentStep && currentError) return 'danger';\n  if (step === currentStep && currentWarning) return 'warning';\n  if (step === currentStep) return 'info';\n  if (step > currentStep) return 'pending';\n};\n\nexport const stepsByProvider = (provider) => {\n  switch (provider) {\n    case AWS_PROVIDER:\n      return AWS_STEPS;\n    case AZURE_PROVIDER:\n      return AZURE_STEPS;\n    case GCP_PROVIDER:\n      return GCP_STEPS;\n    default:\n      throw new Error(`Steps requested for unknown provider: ${provider}`);\n  }\n};\n\nexport const instanceType = (provider) => {\n  switch (provider) {\n    case AWS_PROVIDER:\n      return 'instance_type';\n    case AZURE_PROVIDER:\n      return 'instance_size';\n    case GCP_PROVIDER:\n      return 'machine_type';\n    default:\n      return 'instance_type';\n  }\n};\n\nexport const region = (provider) => {\n  switch (provider) {\n    case AWS_PROVIDER:\n      return 'region';\n    case GCP_PROVIDER:\n      return 'zone';\n    default:\n      return 'region';\n  }\n};\n","import React from 'react';\n\nconst intervalGenerator = function* (intervalList) {\n  for (const interval of intervalList) yield interval;\n};\n\nconst useInterval = (list) => {\n  const generatorRef = React.useRef(null);\n  const savedList = React.useRef(list);\n  const [currentInterval, setCurrentInterval] = React.useState();\n\n  React.useEffect(() => {\n    generatorRef.current = intervalGenerator(savedList.current);\n  }, []);\n\n  const nextInterval = () => {\n    const nextValue = generatorRef.current.next().value;\n    setCurrentInterval(nextValue === undefined ? false : nextValue);\n    if (nextValue === undefined) return false;\n    return nextValue;\n  };\n  return { nextInterval, currentInterval };\n};\n\nexport default useInterval;\n","import { AWS_PROVIDER, AZURE_PROVIDER, GCP_PROVIDER } from './constants';\n\nexport const instanceLink = (instanceID, provider, region) => {\n  switch (provider) {\n    case AWS_PROVIDER:\n      return `https://console.aws.amazon.com/ec2/home?region=${region}#InstanceDetails:instanceId=${instanceID}`;\n    case AZURE_PROVIDER:\n      return `https://portal.azure.com/#@rhdevcloudops.onmicrosoft.com/resource${instanceID}/overview`;\n    case GCP_PROVIDER:\n      return `https://console.cloud.google.com/compute/instancesDetail/zones/${region}/instances/${instanceID}`;\n    default:\n      return null;\n  }\n};\n\nexport const humanizeInstanceID = (instanceID, provider) => {\n  switch (provider) {\n    case AZURE_PROVIDER:\n      return instanceID.split('/').slice(-1);\n    default:\n      return instanceID;\n  }\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { TableComposable, Thead, Tr, Th, Tbody, Td } from '@patternfly/react-table';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { Button, ClipboardCopy, Card, Pagination, Spinner, Bullseye } from '@patternfly/react-core';\nimport { useQuery } from '@tanstack/react-query';\n\nimport { SSHUsername } from './helpers';\nimport { instanceLink, humanizeInstanceID } from '../Common/instanceHelpers';\nimport { fetchReservationByProvider } from '../../API';\n\nconst PER_PAGE_OPTIONS = [\n  { title: '5', value: 5 },\n  { title: '10', value: 10 },\n  { title: '20', value: 20 },\n  { title: '50', value: 50 },\n];\nconst InstancesTable = ({ reservationID, provider, region }) => {\n  const [paginationOptions, setPaginationOptions] = React.useState({ perPage: 5, page: 1, startIdx: 0, endIdx: 5 });\n  const { data: instances, isLoading } = useQuery(['launchInfo', reservationID], () => fetchReservationByProvider(reservationID, provider), {\n    select: (reservation) => reservation?.instances,\n  });\n\n  const onSetPage = (_, newPage, perPage, startIdx, endIdx) => {\n    setPaginationOptions({ perPage, page: newPage, startIdx, endIdx });\n  };\n\n  const onPerPageSelect = (_, newPerPage, newPage, startIdx, endIdx) => {\n    setPaginationOptions((prevOptions) => ({ ...prevOptions, perPage: newPerPage, page: newPage, startIdx, endIdx }));\n  };\n\n  const instancesPerPage = instances?.slice(paginationOptions.startIdx, paginationOptions.endIdx);\n  const atLeastOneDetailNotEmpty = instancesPerPage?.some((instance) => instance.detail?.public_dns?.length > 0);\n\n  if (isLoading)\n    return (\n      <Bullseye>\n        <Spinner isSVG size=\"xl\" />\n      </Bullseye>\n    );\n  return (\n    <Card style={{ position: 'relative', marginLeft: '-20%', marginRight: '-20%' }}>\n      <Pagination\n        itemCount={instances?.length || 0}\n        page={paginationOptions.page}\n        onSetPage={onSetPage}\n        perPage={paginationOptions.perPage}\n        onPerPageSelect={onPerPageSelect}\n        perPageOptions={PER_PAGE_OPTIONS}\n        isCompact\n        ouiaId=\"instances-pagination\"\n      />\n      <TableComposable ouiaId=\"instances table\" aria-label=\"instances description table\" variant=\"compact\">\n        <Thead>\n          <Tr>\n            <Th>ID</Th>\n            {atLeastOneDetailNotEmpty && <Th>DNS</Th>}\n            <Th>SSH command</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {instancesPerPage?.map(({ instance_id, detail }) => (\n            <Tr key={instance_id}>\n              <Td aria-label=\"instance id\" dataLabel=\"ID\">\n                <Button\n                  variant=\"link\"\n                  icon={<ExternalLinkAltIcon />}\n                  iconPosition=\"right\"\n                  isInline\n                  component=\"a\"\n                  rel=\"noreferrer\"\n                  target=\"_blank\"\n                  href={instanceLink(instance_id, provider, region)}\n                >\n                  {humanizeInstanceID(instance_id, provider)}\n                </Button>\n              </Td>\n              {atLeastOneDetailNotEmpty && (\n                <Td aria-label=\"instance dns\" dataLabel=\"DNS\">\n                  {detail?.public_dns ? (\n                    <ClipboardCopy isReadOnly hoverTip=\"Copy DNS\" clickTip=\"DNS was copied!\" variant=\"expansion\">\n                      {detail?.public_dns}\n                    </ClipboardCopy>\n                  ) : (\n                    'N/A'\n                  )}\n                </Td>\n              )}\n              <Td aria-label=\"ssh command\" dataLabel=\"SSH\">\n                {detail?.public_ipv4 ? (\n                  <ClipboardCopy isReadOnly hoverTip=\"Copy SSH command\" clickTip=\"SSH was copied!\" variant=\"expansion\">\n                    {`ssh ${SSHUsername(provider)}@${detail?.public_ipv4}`}\n                  </ClipboardCopy>\n                ) : (\n                  'N/A'\n                )}\n              </Td>\n            </Tr>\n          ))}\n        </Tbody>\n      </TableComposable>\n    </Card>\n  );\n};\n\nInstancesTable.propTypes = {\n  provider: PropTypes.string.isRequired,\n  region: PropTypes.string.isRequired,\n  reservationID: PropTypes.number.isRequired,\n};\n\nexport default InstancesTable;\n","import { AWS_PROVIDER, AZURE_PROVIDER, GCP_PROVIDER } from '../../constants';\n\nexport const SSHUsername = (provider) => {\n  switch (provider) {\n    case AWS_PROVIDER:\n      return 'ec2-user';\n    case AZURE_PROVIDER:\n      return 'azureuser';\n    case GCP_PROVIDER:\n      return 'gcp-user';\n    default:\n      '';\n  }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ProgressStepper,\n  ProgressStep,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  Title,\n  Text,\n  Popover,\n  Button,\n  WizardContextConsumer,\n} from '@patternfly/react-core';\nimport { CogsIcon, PendingIcon, CheckCircleIcon } from '@patternfly/react-icons';\nimport { useMutation, useQuery } from '@tanstack/react-query';\n\nimport { useWizardContext } from '../../../Common/WizardContext';\nimport { createNewPublicKey, createReservation, fetchReservation } from '../../../../API';\n\nimport useInterval from '../../../Common/Hooks/useInterval';\nimport { POLLING_BACKOFF_INTERVAL, PROVIDERS_INSTANCES_SUPPORT, SSH_STEP } from './constants';\nimport { instanceType, mapCurrentVariant, region, stepsByProvider } from './helpers';\nimport InstancesTable from '../../../InstancesTable';\nimport { humanizeProvider } from '../../../Common/helpers';\n\nconst ReservationProgress = ({ setLaunchSuccess }) => {\n  const [steps, setSteps] = React.useState([]);\n  const [currentError, setCurrentError] = React.useState();\n  const [currentWarning, setCurrentWarning] = React.useState();\n  const [currentStep, setCurrentStep] = React.useState(0);\n  const [currentJobStep, setCurrentJobStep] = React.useState(0);\n  const [reservationID, setReservationID] = React.useState();\n\n  const [\n    {\n      chosenSource,\n      chosenInstanceType,\n      chosenNumOfInstances,\n      chosenRegion,\n      sshPublicName,\n      sshPublicKey,\n      chosenSshKeyId,\n      uploadedKey,\n      chosenImageID,\n      provider,\n      chosenTemplate,\n    },\n  ] = useWizardContext();\n  const { nextInterval, currentInterval } = useInterval(POLLING_BACKOFF_INTERVAL);\n\n  const { mutate: mutateReservation, error: reservationError } = useMutation(createReservation(provider), {\n    onSuccess: (res) => {\n      stepUp();\n      setReservationID(res?.data?.reservation_id);\n    },\n  });\n\n  const reservationParams = () => ({\n    source_id: chosenSource,\n    [instanceType(provider)]: chosenInstanceType,\n    amount: chosenNumOfInstances,\n    image_id: chosenImageID,\n    [region(provider)]: chosenRegion,\n    pubkey_id: chosenSshKeyId,\n    ...(chosenTemplate && { launch_template_id: chosenTemplate }),\n  });\n\n  React.useEffect(() => {\n    if (createReservation) {\n      if (uploadedKey) {\n        setSteps(SSH_STEP.concat(stepsByProvider(provider)));\n        createPublicKey({ name: sshPublicName, body: sshPublicKey });\n      } else {\n        setSteps(stepsByProvider(provider));\n        mutateReservation(reservationParams());\n      }\n    }\n  }, [createReservation, setSteps, uploadedKey]);\n\n  const { mutate: createPublicKey, error: pubkeyError } = useMutation(createNewPublicKey, {\n    onSuccess: (resp) => {\n      stepUp();\n      mutateReservation({\n        ...reservationParams(),\n        pubkey_id: resp?.data?.id,\n      });\n    },\n  });\n\n  // polling request\n  const { data: polledReservation } = useQuery(['reservation', reservationID], () => fetchReservation(reservationID), {\n    enabled: !!reservationID && !currentError,\n    staleTime: 0, // disable cache\n    refetchInterval: (data) => {\n      if (data?.success || !!data?.error) return false;\n      return currentInterval;\n    },\n    onSuccess: (data) => {\n      if (currentJobStep < data.step && !data.error) {\n        setCurrentJobStep((prev) => prev + 1);\n        stepUp();\n      }\n      !data?.success && nextInterval();\n      data.success && setLaunchSuccess();\n    },\n    onError: () => {\n      setCurrentWarning(\n        `The reservation was created but we can't get the launch progress status.\n           Check your ${humanizeProvider(provider)} console later. If this issue persists, please contact support.`\n      );\n    },\n    refetchIntervalInBackground: true,\n  });\n\n  // errors and warnings handling\n  React.useEffect(() => {\n    if (currentInterval === false) {\n      setCurrentWarning(\n        `The launch progress is slower than expected, but we are still on it.\n         It is safe to close this window and check your ${humanizeProvider(provider)} console later`\n      );\n    }\n    if (reservationError || pubkeyError || polledReservation?.error) {\n      const createReservationErrorMsg = reservationError?.response?.data?.msg;\n      const pubkeyErrorMsg = pubkeyError?.response?.data?.msg;\n\n      setCurrentError(createReservationErrorMsg || pubkeyErrorMsg || polledReservation?.error);\n    }\n  }, [reservationError, pubkeyError, polledReservation?.error, currentInterval]);\n\n  const stepUp = () => setCurrentStep((prevStep) => prevStep + 1);\n\n  return (\n    <WizardContextConsumer>\n      {({ goToStepById, onClose }) => (\n        <EmptyState variant=\"large\">\n          <EmptyStateIcon color={(polledReservation?.success && '#3E8635') || null} icon={polledReservation?.success ? CheckCircleIcon : CogsIcon} />\n          <Title headingLevel=\"h4\" size=\"lg\" ouiaId=\"launch-status\">\n            {polledReservation?.success ? 'System(s) launched successfully' : 'Launching system(s)'}\n          </Title>\n          {reservationID && (\n            <Text component=\"small\" ouiaId=\"launch-id\">\n              {`launch ID: ${reservationID}`}\n            </Text>\n          )}\n          <EmptyStateBody>\n            {!polledReservation?.success && (\n              <ProgressStepper isCenterAligned>\n                {steps.map(({ name, description }, step) => {\n                  const variant = mapCurrentVariant(step, currentStep, currentError, currentWarning);\n                  return (\n                    <ProgressStep\n                      variant={variant}\n                      id={name}\n                      key={name}\n                      icon={step > currentStep ? <PendingIcon /> : undefined}\n                      isCurrent={step === currentStep}\n                      description={description}\n                      titleId={name}\n                      aria-label={`step ${name} ${variant}`}\n                      popoverRender={\n                        (currentError || currentWarning) && step === currentStep\n                          ? (stepRef) => (\n                              <Popover\n                                aria-label={`${name} error message`}\n                                headerContent={currentError ? 'Error' : 'Warning'}\n                                bodyContent={currentError || currentWarning}\n                                reference={stepRef}\n                                position=\"right\"\n                              />\n                            )\n                          : undefined\n                      }\n                    >\n                      {name}\n                    </ProgressStep>\n                  );\n                })}\n              </ProgressStepper>\n            )}\n          </EmptyStateBody>\n          {polledReservation?.success && PROVIDERS_INSTANCES_SUPPORT.includes(provider) && (\n            <InstancesTable provider={provider} region={chosenRegion} reservationID={reservationID} />\n          )}\n          {currentError && (\n            <Button id=\"wizard-provisioning-failed-edit-button\" onClick={() => goToStepById(1)} variant=\"primary\">\n              Edit\n            </Button>\n          )}\n          <EmptyStateSecondaryActions>\n            <Button variant=\"link\" isDisabled={!currentError && currentStep < 2} onClick={onClose}>\n              Close\n            </Button>\n          </EmptyStateSecondaryActions>\n        </EmptyState>\n      )}\n    </WizardContextConsumer>\n  );\n};\n\nReservationProgress.propTypes = {\n  setLaunchSuccess: PropTypes.func.isRequired,\n};\n\nexport default ReservationProgress;\n"],"names":["POLLING_BACKOFF_INTERVAL","AWS_STEPS","name","description","AZURE_STEPS","GCP_STEPS","SSH_STEP","PROVIDERS_INSTANCES_SUPPORT","AWS_PROVIDER","AZURE_PROVIDER","GCP_PROVIDER","mapCurrentVariant","step","currentStep","currentError","currentWarning","stepsByProvider","provider","Error","concat","instanceType","region","intervalGenerator","_regeneratorRuntime","intervalList","_iterator","_step","interval","_context","prev","next","_createForOfIteratorHelper","s","n","done","value","t0","e","f","finish","stop","instanceLink","instanceID","PER_PAGE_OPTIONS","title","InstancesTable","_ref","reservationID","_React$useState","React","perPage","page","startIdx","endIdx","_React$useState2","_slicedToArray","paginationOptions","setPaginationOptions","_useQuery","useQuery","fetchReservationByProvider","select","reservation","instances","data","isLoading","instancesPerPage","slice","atLeastOneDetailNotEmpty","some","instance","_instance$detail","detail","public_dns","length","Bullseye","Spinner","isSVG","size","Card","style","position","marginLeft","marginRight","Pagination","itemCount","onSetPage","_","newPage","onPerPageSelect","newPerPage","prevOptions","_objectSpread","perPageOptions","isCompact","ouiaId","TableComposable","variant","Thead","Tr","Th","Tbody","map","_ref2","instance_id","key","Td","dataLabel","Button","icon","ExternalLinkAltIcon","iconPosition","isInline","component","rel","target","href","split","humanizeInstanceID","ClipboardCopy","isReadOnly","hoverTip","clickTip","public_ipv4","SSHUsername","propTypes","PropTypes","isRequired","ReservationProgress","setLaunchSuccess","steps","setSteps","_React$useState3","_React$useState4","setCurrentError","_React$useState5","_React$useState6","setCurrentWarning","_React$useState7","_React$useState8","setCurrentStep","_React$useState9","_React$useState10","currentJobStep","setCurrentJobStep","_React$useState11","_React$useState12","setReservationID","_useWizardContext","useWizardContext","_useWizardContext2$","chosenSource","chosenInstanceType","chosenNumOfInstances","chosenRegion","sshPublicName","sshPublicKey","chosenSshKeyId","uploadedKey","chosenImageID","chosenTemplate","_useInterval","list","generatorRef","savedList","currentInterval","setCurrentInterval","current","nextInterval","nextValue","undefined","useInterval","_useMutation","useMutation","createReservation","onSuccess","res","_res$data","stepUp","reservation_id","mutateReservation","mutate","reservationError","error","reservationParams","_objectSpread2","source_id","_defineProperty","launch_template_id","createPublicKey","body","_useMutation2","createNewPublicKey","resp","_resp$data","pubkey_id","id","pubkeyError","polledReservation","fetchReservation","enabled","staleTime","refetchInterval","success","onError","humanizeProvider","refetchIntervalInBackground","_reservationError$res","_pubkeyError$response","createReservationErrorMsg","response","msg","pubkeyErrorMsg","prevStep","WizardContextConsumer","goToStepById","onClose","EmptyState","EmptyStateIcon","color","CheckCircleIcon","CogsIcon","Title","headingLevel","Text","EmptyStateBody","ProgressStepper","isCenterAligned","_ref3","ProgressStep","PendingIcon","isCurrent","titleId","popoverRender","stepRef","Popover","headerContent","bodyContent","reference","includes","onClick","EmptyStateSecondaryActions","isDisabled"],"sourceRoot":""}