{"version":3,"file":"js/595.34143d754d567b79f6bd.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-styles/css/components/Content/content.mjs","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Text/Text.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/helpers/resizeObserver.js","webpack:///./src/Components/ProvisioningWizard/steps/ReservationProgress/constants.js","webpack:///./src/Components/ProvisioningWizard/steps/ReservationProgress/helpers.js","webpack:///./node_modules/@patternfly/react-styles/css/components/ExpandableSection/expandable-section.mjs","webpack:///./node_modules/@patternfly/react-tokens/dist/esm/c_expandable_section_m_truncate__content_LineClamp.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/ExpandableSection/ExpandableSection.js","webpack:///./node_modules/@patternfly/react-styles/css/components/DescriptionList/description-list.mjs","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/DescriptionList/DescriptionList.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/DescriptionList/DescriptionListTerm.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/DescriptionList/DescriptionListGroup.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/DescriptionList/DescriptionListDescription.js","webpack:///./src/Components/LaunchDescriptionList/index.js","webpack:///./src/Components/ProvisioningWizard/steps/ReviewDetails/index.js"],"sourcesContent":["import './content.css';\nexport default {\n  \"content\": \"pf-c-content\",\n  \"modifiers\": {\n    \"visited\": \"pf-m-visited\",\n    \"plain\": \"pf-m-plain\",\n    \"overpassFont\": \"pf-m-overpass-font\"\n  }\n};","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Content/content';\nimport { useOUIAProps } from '../../helpers';\nexport var TextVariants;\n(function (TextVariants) {\n    TextVariants[\"h1\"] = \"h1\";\n    TextVariants[\"h2\"] = \"h2\";\n    TextVariants[\"h3\"] = \"h3\";\n    TextVariants[\"h4\"] = \"h4\";\n    TextVariants[\"h5\"] = \"h5\";\n    TextVariants[\"h6\"] = \"h6\";\n    TextVariants[\"p\"] = \"p\";\n    TextVariants[\"a\"] = \"a\";\n    TextVariants[\"small\"] = \"small\";\n    TextVariants[\"blockquote\"] = \"blockquote\";\n    TextVariants[\"pre\"] = \"pre\";\n})(TextVariants || (TextVariants = {}));\nexport const Text = (_a) => {\n    var { children = null, className = '', component = TextVariants.p, isVisitedLink = false, ouiaId, ouiaSafe = true } = _a, props = __rest(_a, [\"children\", \"className\", \"component\", \"isVisitedLink\", \"ouiaId\", \"ouiaSafe\"]);\n    const Component = component;\n    const ouiaProps = useOUIAProps(Text.displayName, ouiaId, ouiaSafe);\n    return (React.createElement(Component, Object.assign({}, ouiaProps, props, { \"data-pf-content\": true, className: css(isVisitedLink && component === TextVariants.a && styles.modifiers.visited, className) }), children));\n};\nText.displayName = 'Text';\n//# sourceMappingURL=Text.js.map","import { canUseDOM } from './util';\n/**\n * This function creates a ResizeObserver used to handle resize events for the given containerRef. If ResizeObserver\n * or the given containerRef are not available, a window resize event listener is used by default.\n *\n * Example 1:\n *\n * private containerRef = React.createRef<HTMLDivElement>();\n * private observer: any = () => {};\n *\n * public componentDidMount() {\n *   this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n * }\n *\n * public componentWillUnmount() {\n *   this.observer();\n * }\n *\n * private handleResize = () => {\n *   if (this.containerRef.current && this.containerRef.current.clientWidth) {\n *     this.setState({ width: this.containerRef.current.clientWidth });\n *   }\n * };\n *\n * public render() {\n *   return (\n *     <div ref={this.containerRef} >\n *       <Chart width={this.state.width} ... />\n *     </div>\n *   );\n * }\n *\n * Example 2:\n *\n * private inputRef = React.createRef<HTMLInputElement>();\n * private observer: any = () => {};\n *\n * public componentDidMount() {\n *   this.observer = getResizeObserver(this.inputRef.current, this.handleResize);\n * }\n *\n * public componentWillUnmount() {\n *   this.observer();\n * }\n *\n * private handleResize = () => {\n *   if (this.inputRef.current) {\n *     trimLeft(inputRef.current, String(this.props.value));\n *   }\n * };\n *\n * public render() {\n *   return (\n *     <input ref={this.inputRef} ... />\n *   );\n * }\n *\n * Example 3 - With debounced method passed in:\n *\n * public componentDidMount() {\n *   this.observer = getResizeObserver(this.inputRef.current, debounce(this.handleResize, 250), false);\n * }\n *\n * @param {Element} containerRefElement The container reference to observe\n * @param {Function} handleResize The function to call for resize events\n * @param {boolean} useRequestAnimationFrame Whether to pass the handleResize function as a callback to requestAnimationFrame. Pass in false when the function passed in is debounced. Defaults to true.\n * @return {Function} The function used to unobserve resize events\n */\nexport const getResizeObserver = (containerRefElement, handleResize, useRequestAnimationFrame = true) => {\n    let unobserve;\n    if (canUseDOM) {\n        const { ResizeObserver } = window;\n        if (containerRefElement && ResizeObserver) {\n            const resizeObserver = new ResizeObserver((entries) => {\n                // Wrap resize function in requestAnimationFrame to avoid \"ResizeObserver loop limit exceeded\" errors\n                if (useRequestAnimationFrame) {\n                    window.requestAnimationFrame(() => {\n                        if (Array.isArray(entries) && entries.length > 0) {\n                            handleResize();\n                        }\n                    });\n                    // Avoid wrapping function in requestAnimationFrame if the function is debounced\n                }\n                else {\n                    if (Array.isArray(entries) && entries.length > 0) {\n                        handleResize();\n                    }\n                }\n            });\n            resizeObserver.observe(containerRefElement);\n            unobserve = () => resizeObserver.unobserve(containerRefElement);\n        }\n        else {\n            window.addEventListener('resize', handleResize);\n            unobserve = () => window.removeEventListener('resize', handleResize);\n        }\n    }\n    return () => {\n        if (unobserve) {\n            unobserve();\n        }\n    };\n};\n//# sourceMappingURL=resizeObserver.js.map","import { AWS_PROVIDER, AZURE_PROVIDER, GCP_PROVIDER } from '../../../../constants';\n\nexport const PF_SUCCESS_100 = '#3E8635';\nexport const PF_DANGER_100 = '#C9190B';\n\nexport const POLLING_BACKOFF_INTERVAL = [\n  500, 600, 700, 800, 900, 1000, 1200, 1400, 1600, 1800, 2000, 3000, 4000, 5000, 10000, 15000, 20000, 25000, 30000, 60000, 60000,\n];\n\nexport const AWS_STEPS = [\n  { name: 'Create reservation', description: `Submit requested data` },\n  {\n    name: 'Transfer keys',\n    description: 'Uploading public key to AWS',\n  },\n  { name: 'Launch instance(s)', description: 'Call AWS API for launching instance(s)' },\n  { name: 'Instance description', description: 'Fetch instance(s) descriptions' },\n];\n\nexport const AZURE_STEPS = [\n  { name: 'Create reservation', description: `Submit data of requested instances` },\n  { name: 'Ensure resource group', description: 'Ensure resource group is present on Azure account' },\n  { name: 'Launch instance(s)', description: 'Launch defined instance(s) on Azure' },\n];\n\nexport const GCP_STEPS = [\n  { name: 'Create reservation', description: `Submit requested data` },\n  { name: 'Launch instance(s)', description: 'Call Google API' },\n  { name: 'Fetch instance(s) description', description: 'Fetch instance(s) descriptions' },\n];\n\nexport const SSH_STEP = [{ name: 'New SSH key', description: 'Creating new SSH public key resource' }];\n\nexport const PROVIDERS_INSTANCES_SUPPORT = [AWS_PROVIDER, AZURE_PROVIDER, GCP_PROVIDER];\n","import { AWS_PROVIDER, AZURE_PROVIDER, GCP_PROVIDER } from '../../../Common/constants';\nimport { AWS_STEPS, AZURE_STEPS, GCP_STEPS } from './constants';\n\nexport const mapCurrentVariant = (step, currentStep, currentError, currentWarning) => {\n  if (step < currentStep) return 'success';\n  if (step === currentStep && currentError) return 'danger';\n  if (step === currentStep && currentWarning) return 'warning';\n  if (step === currentStep) return 'info';\n  if (step > currentStep) return 'pending';\n};\n\nexport const stepsByProvider = (provider) => {\n  switch (provider) {\n    case AWS_PROVIDER:\n      return AWS_STEPS;\n    case AZURE_PROVIDER:\n      return AZURE_STEPS;\n    case GCP_PROVIDER:\n      return GCP_STEPS;\n    default:\n      throw new Error(`Steps requested for unknown provider: ${provider}`);\n  }\n};\n\nexport const instanceType = (provider) => {\n  switch (provider) {\n    case AWS_PROVIDER:\n      return 'instance_type';\n    case AZURE_PROVIDER:\n      return 'instance_size';\n    case GCP_PROVIDER:\n      return 'machine_type';\n    default:\n      return 'instance_type';\n  }\n};\n\nexport const region = (provider) => {\n  switch (provider) {\n    case AWS_PROVIDER:\n      return 'region';\n    case GCP_PROVIDER:\n      return 'zone';\n    default:\n      return 'region';\n  }\n};\n","import './expandable-section.css';\nexport default {\n  \"expandableSection\": \"pf-c-expandable-section\",\n  \"expandableSectionContent\": \"pf-c-expandable-section__content\",\n  \"expandableSectionToggle\": \"pf-c-expandable-section__toggle\",\n  \"expandableSectionToggleIcon\": \"pf-c-expandable-section__toggle-icon\",\n  \"expandableSectionToggleText\": \"pf-c-expandable-section__toggle-text\",\n  \"modifiers\": {\n    \"expanded\": \"pf-m-expanded\",\n    \"detached\": \"pf-m-detached\",\n    \"truncate\": \"pf-m-truncate\",\n    \"limitWidth\": \"pf-m-limit-width\",\n    \"displayLg\": \"pf-m-display-lg\",\n    \"indented\": \"pf-m-indented\",\n    \"active\": \"pf-m-active\",\n    \"expandTop\": \"pf-m-expand-top\",\n    \"overpassFont\": \"pf-m-overpass-font\"\n  }\n};","export const c_expandable_section_m_truncate__content_LineClamp = {\n  \"name\": \"--pf-c-expandable-section--m-truncate__content--LineClamp\",\n  \"value\": \"3\",\n  \"var\": \"var(--pf-c-expandable-section--m-truncate__content--LineClamp)\"\n};\nexport default c_expandable_section_m_truncate__content_LineClamp;","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ExpandableSection/expandable-section';\nimport { css } from '@patternfly/react-styles';\nimport lineClamp from '@patternfly/react-tokens/dist/esm/c_expandable_section_m_truncate__content_LineClamp';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { debounce } from '../../helpers/util';\nimport { getResizeObserver } from '../../helpers/resizeObserver';\nexport var ExpandableSectionVariant;\n(function (ExpandableSectionVariant) {\n    ExpandableSectionVariant[\"default\"] = \"default\";\n    ExpandableSectionVariant[\"truncate\"] = \"truncate\";\n})(ExpandableSectionVariant || (ExpandableSectionVariant = {}));\nconst setLineClamp = (lines, element) => {\n    if (!element || lines < 1) {\n        return;\n    }\n    element.style.setProperty(lineClamp.name, lines.toString());\n};\nexport class ExpandableSection extends React.Component {\n    constructor(props) {\n        super(props);\n        this.expandableContentRef = React.createRef();\n        this.observer = () => { };\n        this.checkToggleVisibility = () => {\n            var _a;\n            if ((_a = this.expandableContentRef) === null || _a === void 0 ? void 0 : _a.current) {\n                const maxLines = this.props.truncateMaxLines || parseInt(lineClamp.value);\n                const totalLines = this.expandableContentRef.current.scrollHeight /\n                    parseInt(getComputedStyle(this.expandableContentRef.current).lineHeight);\n                this.setState({\n                    hasToggle: totalLines > maxLines\n                });\n            }\n        };\n        this.resize = () => {\n            const { offsetWidth } = this.expandableContentRef.current;\n            if (this.state.previousWidth !== offsetWidth) {\n                this.setState({ previousWidth: offsetWidth });\n                this.checkToggleVisibility();\n            }\n        };\n        this.handleResize = debounce(this.resize, 250);\n        this.state = {\n            isExpanded: props.isExpanded,\n            hasToggle: true,\n            previousWidth: undefined\n        };\n    }\n    calculateToggleText(toggleText, toggleTextExpanded, toggleTextCollapsed, propOrStateIsExpanded) {\n        if (propOrStateIsExpanded && toggleTextExpanded !== '') {\n            return toggleTextExpanded;\n        }\n        if (!propOrStateIsExpanded && toggleTextCollapsed !== '') {\n            return toggleTextCollapsed;\n        }\n        return toggleText;\n    }\n    componentDidMount() {\n        if (this.props.variant === ExpandableSectionVariant.truncate) {\n            const expandableContent = this.expandableContentRef.current;\n            this.setState({ previousWidth: expandableContent.offsetWidth });\n            this.observer = getResizeObserver(expandableContent, this.handleResize, false);\n            if (this.props.truncateMaxLines) {\n                setLineClamp(this.props.truncateMaxLines, expandableContent);\n            }\n            this.checkToggleVisibility();\n        }\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.variant === ExpandableSectionVariant.truncate &&\n            prevProps.truncateMaxLines !== this.props.truncateMaxLines) {\n            const expandableContent = this.expandableContentRef.current;\n            setLineClamp(this.props.truncateMaxLines, expandableContent);\n            this.checkToggleVisibility();\n        }\n    }\n    componentWillUnmount() {\n        if (this.props.variant === ExpandableSectionVariant.truncate) {\n            this.observer();\n        }\n    }\n    render() {\n        const _a = this.props, { onToggle: onToggleProp, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        isActive, className, toggleText, toggleTextExpanded, toggleTextCollapsed, toggleContent, children, isExpanded, isDetached, displaySize, isWidthLimited, isIndented, contentId, variant, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        truncateMaxLines } = _a, props = __rest(_a, [\"onToggle\", \"isActive\", \"className\", \"toggleText\", \"toggleTextExpanded\", \"toggleTextCollapsed\", \"toggleContent\", \"children\", \"isExpanded\", \"isDetached\", \"displaySize\", \"isWidthLimited\", \"isIndented\", \"contentId\", \"variant\", \"truncateMaxLines\"]);\n        let onToggle = onToggleProp;\n        let propOrStateIsExpanded = isExpanded;\n        // uncontrolled\n        if (isExpanded === undefined) {\n            propOrStateIsExpanded = this.state.isExpanded;\n            onToggle = isOpen => {\n                this.setState({ isExpanded: isOpen }, () => onToggleProp(this.state.isExpanded));\n            };\n        }\n        const computedToggleText = this.calculateToggleText(toggleText, toggleTextExpanded, toggleTextCollapsed, propOrStateIsExpanded);\n        const expandableToggle = !isDetached && (React.createElement(\"button\", { className: css(styles.expandableSectionToggle), type: \"button\", \"aria-expanded\": propOrStateIsExpanded, onClick: () => onToggle(!propOrStateIsExpanded) },\n            variant !== ExpandableSectionVariant.truncate && (React.createElement(\"span\", { className: css(styles.expandableSectionToggleIcon) },\n                React.createElement(AngleRightIcon, { \"aria-hidden\": true }))),\n            React.createElement(\"span\", { className: css(styles.expandableSectionToggleText) }, toggleContent || computedToggleText)));\n        return (React.createElement(\"div\", Object.assign({ className: css(styles.expandableSection, propOrStateIsExpanded && styles.modifiers.expanded, isActive && styles.modifiers.active, isDetached && styles.modifiers.detached, displaySize === 'large' && styles.modifiers.displayLg, isWidthLimited && styles.modifiers.limitWidth, isIndented && styles.modifiers.indented, variant === ExpandableSectionVariant.truncate && styles.modifiers.truncate, className) }, props),\n            variant === ExpandableSectionVariant.default && expandableToggle,\n            React.createElement(\"div\", { ref: this.expandableContentRef, className: css(styles.expandableSectionContent), hidden: variant !== ExpandableSectionVariant.truncate && !propOrStateIsExpanded, id: contentId }, children),\n            variant === ExpandableSectionVariant.truncate && this.state.hasToggle && expandableToggle));\n    }\n}\nExpandableSection.displayName = 'ExpandableSection';\nExpandableSection.defaultProps = {\n    className: '',\n    toggleText: '',\n    toggleTextExpanded: '',\n    toggleTextCollapsed: '',\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onToggle: (isExpanded) => undefined,\n    isActive: false,\n    isDetached: false,\n    displaySize: 'default',\n    isWidthLimited: false,\n    isIndented: false,\n    contentId: '',\n    variant: 'default'\n};\n//# sourceMappingURL=ExpandableSection.js.map","import './description-list.css';\nexport default {\n  \"card\": \"pf-c-card\",\n  \"descriptionList\": \"pf-c-description-list\",\n  \"descriptionListDescription\": \"pf-c-description-list__description\",\n  \"descriptionListGroup\": \"pf-c-description-list__group\",\n  \"descriptionListTerm\": \"pf-c-description-list__term\",\n  \"descriptionListTermIcon\": \"pf-c-description-list__term-icon\",\n  \"descriptionListText\": \"pf-c-description-list__text\",\n  \"modifiers\": {\n    \"inlineGrid\": \"pf-m-inline-grid\",\n    \"autoColumnWidths\": \"pf-m-auto-column-widths\",\n    \"autoFit\": \"pf-m-auto-fit\",\n    \"compact\": \"pf-m-compact\",\n    \"fluid\": \"pf-m-fluid\",\n    \"fillColumns\": \"pf-m-fill-columns\",\n    \"displayLg\": \"pf-m-display-lg\",\n    \"display_2xl\": \"pf-m-display-2xl\",\n    \"helpText\": \"pf-m-help-text\",\n    \"1Col\": \"pf-m-1-col\",\n    \"2Col\": \"pf-m-2-col\",\n    \"3Col\": \"pf-m-3-col\",\n    \"horizontal\": \"pf-m-horizontal\",\n    \"vertical\": \"pf-m-vertical\",\n    \"1ColOnSm\": \"pf-m-1-col-on-sm\",\n    \"2ColOnSm\": \"pf-m-2-col-on-sm\",\n    \"3ColOnSm\": \"pf-m-3-col-on-sm\",\n    \"horizontalOnSm\": \"pf-m-horizontal-on-sm\",\n    \"verticalOnSm\": \"pf-m-vertical-on-sm\",\n    \"1ColOnMd\": \"pf-m-1-col-on-md\",\n    \"2ColOnMd\": \"pf-m-2-col-on-md\",\n    \"3ColOnMd\": \"pf-m-3-col-on-md\",\n    \"horizontalOnMd\": \"pf-m-horizontal-on-md\",\n    \"verticalOnMd\": \"pf-m-vertical-on-md\",\n    \"1ColOnLg\": \"pf-m-1-col-on-lg\",\n    \"2ColOnLg\": \"pf-m-2-col-on-lg\",\n    \"3ColOnLg\": \"pf-m-3-col-on-lg\",\n    \"horizontalOnLg\": \"pf-m-horizontal-on-lg\",\n    \"verticalOnLg\": \"pf-m-vertical-on-lg\",\n    \"1ColOnXl\": \"pf-m-1-col-on-xl\",\n    \"2ColOnXl\": \"pf-m-2-col-on-xl\",\n    \"3ColOnXl\": \"pf-m-3-col-on-xl\",\n    \"horizontalOnXl\": \"pf-m-horizontal-on-xl\",\n    \"verticalOnXl\": \"pf-m-vertical-on-xl\",\n    \"1ColOn_2xl\": \"pf-m-1-col-on-2xl\",\n    \"2ColOn_2xl\": \"pf-m-2-col-on-2xl\",\n    \"3ColOn_2xl\": \"pf-m-3-col-on-2xl\",\n    \"horizontalOn_2xl\": \"pf-m-horizontal-on-2xl\",\n    \"verticalOn_2xl\": \"pf-m-vertical-on-2xl\"\n  }\n};","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/DescriptionList/description-list';\nimport { formatBreakpointMods } from '../../helpers';\nconst setBreakpointModifiers = (prefix, modifiers) => {\n    const mods = modifiers;\n    return Object.keys(mods || {}).reduce((acc, curr) => curr === 'default' ? Object.assign(Object.assign({}, acc), { [prefix]: mods[curr] }) : Object.assign(Object.assign({}, acc), { [`${prefix}-on-${curr}`]: mods[curr] }), {});\n};\nexport const DescriptionList = (_a) => {\n    var { className = '', children = null, isHorizontal = false, isAutoColumnWidths, isAutoFit, isInlineGrid, isCompact, isFluid, isFillColumns, displaySize, columnModifier, autoFitMinModifier, termWidth, horizontalTermWidthModifier, orientation, style } = _a, props = __rest(_a, [\"className\", \"children\", \"isHorizontal\", \"isAutoColumnWidths\", \"isAutoFit\", \"isInlineGrid\", \"isCompact\", \"isFluid\", \"isFillColumns\", \"displaySize\", \"columnModifier\", \"autoFitMinModifier\", \"termWidth\", \"horizontalTermWidthModifier\", \"orientation\", \"style\"]);\n    if (isAutoFit && autoFitMinModifier) {\n        style = Object.assign(Object.assign({}, style), setBreakpointModifiers('--pf-c-description-list--GridTemplateColumns--min', autoFitMinModifier));\n    }\n    if (termWidth) {\n        style = Object.assign(Object.assign({}, style), { '--pf-c-description-list__term--width': termWidth });\n    }\n    if (isHorizontal && horizontalTermWidthModifier) {\n        style = Object.assign(Object.assign({}, style), setBreakpointModifiers('--pf-c-description-list--m-horizontal__term--width', horizontalTermWidthModifier));\n    }\n    return (React.createElement(\"dl\", Object.assign({ className: css(styles.descriptionList, (isHorizontal || isFluid) && styles.modifiers.horizontal, isAutoColumnWidths && styles.modifiers.autoColumnWidths, isAutoFit && styles.modifiers.autoFit, formatBreakpointMods(columnModifier, styles), formatBreakpointMods(orientation, styles), isInlineGrid && styles.modifiers.inlineGrid, isCompact && styles.modifiers.compact, isFluid && styles.modifiers.fluid, isFillColumns && styles.modifiers.fillColumns, displaySize === 'lg' && styles.modifiers.displayLg, displaySize === '2xl' && styles.modifiers.display_2xl, className), style: style }, props), children));\n};\nDescriptionList.displayName = 'DescriptionList';\n//# sourceMappingURL=DescriptionList.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/DescriptionList/description-list';\nimport { css } from '@patternfly/react-styles';\nexport const DescriptionListTerm = (_a) => {\n    var { children, className, icon } = _a, props = __rest(_a, [\"children\", \"className\", \"icon\"]);\n    return (React.createElement(\"dt\", Object.assign({ className: css(styles.descriptionListTerm, className) }, props),\n        icon ? React.createElement(\"span\", { className: css(styles.descriptionListTermIcon) }, icon) : null,\n        React.createElement(\"span\", { className: css(styles.descriptionListText) }, children)));\n};\nDescriptionListTerm.displayName = 'DescriptionListTerm';\n//# sourceMappingURL=DescriptionListTerm.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/DescriptionList/description-list';\nimport { css } from '@patternfly/react-styles';\nexport const DescriptionListGroup = (_a) => {\n    var { className, children } = _a, props = __rest(_a, [\"className\", \"children\"]);\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.descriptionListGroup, className) }, props), children));\n};\nDescriptionListGroup.displayName = 'DescriptionListGroup';\n//# sourceMappingURL=DescriptionListGroup.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/DescriptionList/description-list';\nimport { css } from '@patternfly/react-styles';\nexport const DescriptionListDescription = (_a) => {\n    var { children = null, className } = _a, props = __rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(\"dd\", Object.assign({ className: css(styles.descriptionListDescription, className) }, props),\n        React.createElement(\"div\", { className: 'pf-c-description-list__text' }, children)));\n};\nDescriptionListDescription.displayName = 'DescriptionListDescription';\n//# sourceMappingURL=DescriptionListDescription.js.map","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { ExpandableSection, DescriptionList, DescriptionListTerm, DescriptionListGroup, DescriptionListDescription } from '@patternfly/react-core';\n\nimport { useSourcesData } from '../Common/Hooks/sources';\nimport { useWizardContext } from '../Common/WizardContext';\nimport { instanceType, region } from '../ProvisioningWizard/steps/ReservationProgress/helpers';\nimport { useQuery } from '@tanstack/react-query';\nimport { fetchLaunchTemplates } from '../../API';\nimport { humanizeProvider } from '../Common/helpers';\nimport { TEMPLATES_KEY } from '../../API/queryKeys';\n\nconst LaunchDescriptionList = ({ imageName }) => {\n  const [\n    { chosenRegion, chosenSshKeyName, uploadedKey, chosenInstanceType, chosenNumOfInstances, chosenSource, sshPublicName, provider, chosenTemplate },\n  ] = useWizardContext();\n  const { sources } = useSourcesData(provider);\n  const { data: templates } = useQuery([TEMPLATES_KEY, `${chosenRegion}-${chosenSource}`], () => fetchLaunchTemplates(chosenSource, chosenRegion), {\n    enabled: !!chosenSource && !!chosenRegion,\n  });\n\n  const [isExpanded, setIsExpanded] = React.useState(true);\n  const onToggle = (isExpanded) => {\n    setIsExpanded(isExpanded);\n  };\n\n  const getChosenSourceName = () => sources?.find((source) => source.id === chosenSource).name;\n  const templateName = templates?.find((template) => template.id === chosenTemplate)?.name;\n  const regionLabel = region(provider).charAt(0).toUpperCase() + region(provider).slice(1);\n  const providerInstanceType = instanceType(provider).replace('_', ' ');\n  const instanceTypeLabel = providerInstanceType.charAt(0).toUpperCase() + providerInstanceType.slice(1);\n\n  return (\n    <ExpandableSection toggleText={provider && humanizeProvider(provider)} onToggle={onToggle} isExpanded={isExpanded} isIndented>\n      <DescriptionList isHorizontal>\n        <DescriptionListGroup>\n          <DescriptionListTerm>Image</DescriptionListTerm>\n          <DescriptionListDescription>{imageName}</DescriptionListDescription>\n        </DescriptionListGroup>\n        <DescriptionListGroup>\n          <DescriptionListTerm>Account</DescriptionListTerm>\n          <DescriptionListDescription>{getChosenSourceName()}</DescriptionListDescription>\n        </DescriptionListGroup>\n        <DescriptionListGroup>\n          <DescriptionListTerm>{regionLabel}</DescriptionListTerm>\n          <DescriptionListDescription>{chosenRegion}</DescriptionListDescription>\n        </DescriptionListGroup>\n        <DescriptionListGroup>\n          <DescriptionListTerm>{instanceTypeLabel}</DescriptionListTerm>\n          <DescriptionListDescription>{chosenInstanceType}</DescriptionListDescription>\n        </DescriptionListGroup>\n        <DescriptionListGroup>\n          <DescriptionListTerm>Count</DescriptionListTerm>\n          <DescriptionListDescription>{chosenNumOfInstances}</DescriptionListDescription>\n        </DescriptionListGroup>\n        <DescriptionListGroup>\n          <DescriptionListTerm>{uploadedKey ? 'New SSH key' : 'Existing SSH key'}</DescriptionListTerm>\n          <DescriptionListDescription>{uploadedKey ? sshPublicName : chosenSshKeyName}</DescriptionListDescription>\n        </DescriptionListGroup>\n        {chosenTemplate && (\n          <DescriptionListGroup>\n            <DescriptionListTerm>Launch template</DescriptionListTerm>\n            <DescriptionListDescription>{templateName}</DescriptionListDescription>\n          </DescriptionListGroup>\n        )}\n      </DescriptionList>\n    </ExpandableSection>\n  );\n};\n\nLaunchDescriptionList.propTypes = {\n  imageName: PropTypes.string.isRequired,\n};\nexport default LaunchDescriptionList;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Title, Text } from '@patternfly/react-core';\nimport LaunchDescriptionList from '../../../LaunchDescriptionList';\n\nconst ReviewDetails = ({ imageName }) => {\n  return (\n    <div className=\"pf-c-form\">\n      <Title ouiaId=\"review_details_title\" headingLevel=\"h1\">\n        Review details\n      </Title>\n      <Text ouiaId=\"review_details_description\">\n        Review the information below and then click <b>Launch</b> to finish the process.\n      </Text>\n\n      <LaunchDescriptionList imageName={imageName} />\n    </div>\n  );\n};\n\nReviewDetails.propTypes = {\n  imageName: PropTypes.string.isRequired,\n};\nexport default ReviewDetails;\n"],"names":["TextVariants","Text","_a","children","className","component","p","isVisitedLink","ouiaId","ouiaSafe","props","Component","ouiaProps","displayName","Object","assign","a","getResizeObserver","containerRefElement","handleResize","useRequestAnimationFrame","unobserve","ResizeObserver","window","resizeObserver","entries","requestAnimationFrame","Array","isArray","length","observe","addEventListener","removeEventListener","POLLING_BACKOFF_INTERVAL","AWS_STEPS","name","description","AZURE_STEPS","GCP_STEPS","SSH_STEP","PROVIDERS_INSTANCES_SUPPORT","AWS_PROVIDER","AZURE_PROVIDER","GCP_PROVIDER","mapCurrentVariant","step","currentStep","currentError","currentWarning","stepsByProvider","provider","Error","concat","instanceType","region","ExpandableSectionVariant","setLineClamp","lines","element","style","setProperty","toString","ExpandableSection","constructor","super","this","expandableContentRef","observer","checkToggleVisibility","current","maxLines","truncateMaxLines","parseInt","totalLines","scrollHeight","getComputedStyle","lineHeight","setState","hasToggle","resize","offsetWidth","state","previousWidth","isExpanded","undefined","calculateToggleText","toggleText","toggleTextExpanded","toggleTextCollapsed","propOrStateIsExpanded","componentDidMount","variant","truncate","expandableContent","componentDidUpdate","prevProps","componentWillUnmount","render","onToggle","onToggleProp","isActive","toggleContent","isDetached","displaySize","isWidthLimited","isIndented","contentId","isOpen","computedToggleText","expandableToggle","type","onClick","default","ref","hidden","id","defaultProps","setBreakpointModifiers","prefix","modifiers","mods","keys","reduce","acc","curr","DescriptionList","isHorizontal","isAutoColumnWidths","isAutoFit","isInlineGrid","isCompact","isFluid","isFillColumns","columnModifier","autoFitMinModifier","termWidth","horizontalTermWidthModifier","orientation","descriptionList","horizontal","autoColumnWidths","autoFit","inlineGrid","compact","fluid","fillColumns","displayLg","display_2xl","DescriptionListTerm","icon","descriptionListTerm","descriptionListTermIcon","descriptionListText","DescriptionListGroup","descriptionListGroup","DescriptionListDescription","descriptionListDescription","LaunchDescriptionList","_ref","_templates$find","imageName","_useWizardContext","useWizardContext","_useWizardContext2$","_slicedToArray","chosenRegion","chosenSshKeyName","uploadedKey","chosenInstanceType","chosenNumOfInstances","chosenSource","sshPublicName","chosenTemplate","sources","useSourcesData","templates","useQuery","TEMPLATES_KEY","fetchLaunchTemplates","enabled","data","_React$useState","React","_React$useState2","setIsExpanded","templateName","find","template","regionLabel","charAt","toUpperCase","slice","providerInstanceType","replace","instanceTypeLabel","humanizeProvider","source","propTypes","PropTypes","isRequired","ReviewDetails","Title","headingLevel"],"sourceRoot":""}